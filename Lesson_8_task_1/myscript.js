//1)
let x = 5; 
console.log( x++ );// 5 - т.к. постфикс - сначала вывод старого потом инкремент

//2)
console.log([] + false - null + true ); //NaN -ибо нехрен вычитать из строки [] преобразуется в пустую строку ,
                                        // а вот если 'false-null' в скобки поместить, то будет 0true 
                                        //поскольку false и null преобразуются в 0 в математических выражениях. 


//3)
console.log([ ] + 1 + 2);// 12  -пустой массив в пустую строку и далее сложение как строки.

//4)
let p = 1; 
let q = p = 2; 
console.log(q); // 2 -Оператор присваивания присваивает левому операнду значение, основанное на значении правого операнда, т.е. p=2 и далее q = 2

//5)
console.log( "1"[0]);// 1 -обращение нулевому элементу строки "1" (как массив)

//7)
console.log( 2 && 1 && null && 0 && undefined);// неявное преобразование в boolean + возвращение значения исходных операторов

//8)
console.log(!!( 5 && 5 ) );// 5&&5 неявно преобразует в булеан, но возвращает значение исходных операторов, !!(эквивалентно Boolean(a)) - преобразует в булеан без возврата значения исходных
console.log(5 && 5);// в итоге получим true и 5

if(!!( 5 && 5 ) == (5 && 5)) {
console.log("Равно!");
}else{
    console.log("Не равно!");
}

//9)
console.log( null || 2 && 3 || 4 );// && имеет приоритет, 2 && 3 возвращает 3 (true&&true) получаем null||3||4 - возвращется ближайшее true, т.е. 3

//10)
console.log([1,2,3]==[1,2,3]);// false поскольку ==  это проверка на равенство ссылок на массивы (массив - это объект)

//11)
console.log(typeof(Infinity));
console.log(+"Infinity");//  Infinity имеет тип number  , бесконечно большое число.

//12)
console.log("ёжик" > "яблоко");//Чтобы определить, что одна строка больше другой, JavaScript использует «алфавитный» или «лексикографический» порядок.
                               //Другими словами, строки сравниваются посимвольно.

//13)
console.log(0 || "" || 2 || undefined || true || falsе);// первое значение ктр. преобразуется в true - 2 

// Я ОХУЕННЫЙ МОНСТР !!!! 